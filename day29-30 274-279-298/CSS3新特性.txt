类选择器、属性选择器、伪类选择器，权重为 10。
一、属性选择器
    选择符            简介  
    E[att]          选择具有att属性的E元素
    E[att="val"]    选择具有att属性且属性值等于val的E元素
    E[attˆ="val"]   匹配具有att属性且值以val开头的E元素
    E[att$="val"]   匹配具有att属性且值以val结尾的E元素
    E[att*="val"]   匹配具有att属性且值中含有val的E元素
************************************************************************************************
二、结构伪类选择器
    选择符               简介
    E:first-child       匹配父层中的第一个子元素E
    E:last-child        匹配父元素中最后一个E元素
    E:nth-child(n)      匹配父元素中的第n个子元素E
------------------------------------------------------------------------------------------------    
  nth-child（n） 选择某个父元素的一个或多个特定的子元素（重点）
      n 可以是数字，关键字和公式
      n 如果是数字，就是选择第 n 个子元素， 里面数字从1开始…
      n 可以是关键字：even 偶数，odd 奇数
      n 可以是公式：常见的公式如下 ( 如果n是公式，则从0开始计算，但是第 0 个元素或者超出了元素的个数会被忽略 )
                 公式      取值              n就是从0开始计算   n        2n        n+5
                 2n        偶数                                0      2*0=0     0+5=5
                 2n+1      奇数                                1      2*1=2     1+5=6
                 5n        5 10 15...                          2      2*2=4     2+5=7
                 n+5       从第5个开始（包含第五个）到最后       3      2*3=6     3+5=8
                 -n+5      前5个（包含第5个）                   4      2*4=8     4+5=9
-------------------------------------------------------------------------------------------------
    E:first-of-type     指定类型E的第一个
    E:last-of-type      指定类型E的最后一个
    E:nth-of-type(n)    指定类型E的第n个
-------------------------------------------------------------------------------------------------
    区别：
    1. nth-child 对父元素里面所有孩子排序选择（序号是固定的） 先找到第n个孩子，然后看看是否和E匹配
    2. nth-of-type 对父元素里面指定子元素进行排序选择。 先去匹配E ，然后再根据E 找第n个孩子
-------------------------------------------------------------------------------------------------
小结
 结构伪类选择器一般用于选择父级里面的第几个孩子
 nth-child 对父元素里面所有孩子排序选择（序号是固定的） 先找到第n个孩子，然后看看是否和E匹配
 nth-of-type 对父元素里面指定子元素进行排序选择。 先去匹配E ，然后再根据E 找第n个孩子
 关于 nth-child（n） 我们要知道 n 是从 0 开始计算的，要记住常用的公式
 如果是无序列表，我们肯定用 nth-child 更多
 类选择器、属性选择器、伪类选择器，权重为 10。
************************************************************************************************
三、 伪元素选择器（重点）
    伪元素选择器可以帮助我们利用CSS创建新标签元素，而不需要HTML标签，从而简化HTML结构。
        选择符       简介
        ::before	在元素内部的前面插入内容
        ::after	    在元素内部的后面插入内容
     注意： 
      before 和 after 创建一个元素，但是属于行内元素
      新创建的这个元素在文档树中是找不到的，所以我们称为伪元素
      语法： element::before {} 
      before 和 after 必须有 content 属性
      before 在父元素内容的前面创建元素，after 在父元素内容的后面插入元素
      伪元素选择器和标签选择器一样，权重为 1

     伪元素使用场景：
     伪元素选择器使用场景1：伪元素字体图标
     伪元素选择器使用场景2：仿土豆效果--遮罩
     伪元素选择器使用场景3：伪元素清除浮动
****************************************************************************************************************************
四、盒子模型
    CSS3 中可以通过 box-sizing 来指定盒模型，有2个值：即可指定为 content-box、border-box，这样我们计算盒子大小的方式就发生了改变。
    可以分成两种情况：
    1. box-sizing: content-box 盒子大小为 width + padding + border （以前默认的）
    2. box-sizing: border-box 盒子大小为 width
    如果盒子模型我们改为了box-sizing: border-box ， 那padding和border就不会撑大盒子了（前提padding和border不会超过width宽度）
***********************************************************************************************************************
五、CSS3滤镜filter
    filter: 函数(); 例如： filter: blur(5px); blur模糊处理 数值越大越模糊
***********************************************************************************************************************
六、CSS3 calc 函数
    calc() 此CSS函数让你在声明CSS属性值时执行一些计算。
    width: calc(100% - 80px);
    括号里面可以使用 + - * / 来进行计算。
***********************************************************************************************************************
七、 CSS3 过渡（重点）
    过渡（transition)是CSS3中具有颠覆性的特征之一，我们可以在不使用 Flash 动画或JavaScript 的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。
    过渡动画： 是从一个状态 渐渐的过渡到另外一个状态，可以让我们页面更好看，更动感十足，虽然 低版本浏览器不支持（ie9以下版本） 但是不会影响页面布局。
    我们现在经常和 :hover 一起 搭配使用。
    谁做变化给谁加transition